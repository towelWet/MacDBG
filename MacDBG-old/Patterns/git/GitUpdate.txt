üß≠ Clean, copy-pasteable ‚Äúkeep-local‚Äù flow (generic repo/paths)

\#1 ‚Äî Go to the project

```bash
cd /path/to/your/project
```

\#2 ‚Äî Ensure repo + remote

```bash
PROJECT_DIR="/path/to/your/project"
ORIGIN_URL="https://github.com/<owner>/<repo>.git"
BRANCH="main"

[ -d .git ] || git init
git branch -M "$BRANCH"

git remote remove origin 2>/dev/null || true
git remote add origin "$ORIGIN_URL"
```

\#3 ‚Äî Stage & commit local work

```bash
git add -A
git commit -m "Update: compiles; fixes; unify APIs; resolve build errors" || echo "No local changes to commit"
```

\#4 ‚Äî Pull remote history, prefer your local on conflicts

```bash
git fetch origin
git pull origin "$BRANCH" --allow-unrelated-histories -X ours || true

git diff --name-only --diff-filter=U
# For each conflicted file you want to keep local:
#   git checkout --ours path/to/file

git add -A
git commit -m "Merge origin/$BRANCH ‚Üí $BRANCH (prefer local/ours)" || echo "No merge commit needed"
```

\#5 ‚Äî Push to GitHub

```bash
git push -u origin "$BRANCH"
```

‚ö°Ô∏è Fast alternatives

Remote is empty (brand-new): skip #4, just push.

```bash
git push -u origin "$BRANCH"
```

Automatically keep local on all conflicts:

```bash
git fetch origin
git merge -X ours origin/"$BRANCH"
git add -A && git commit -m "Resolve with -X ours" || true
git push -u origin "$BRANCH"
```

Intentionally REPLACE remote history (destructive):

```bash
git push -f origin "$BRANCH"
```

(Use only if you‚Äôre sure overwriting remote history is desired.)

üß∞ Common issues (quick fixes)

Remote already set:

```bash
git remote set-url origin "$ORIGIN_URL"
```

‚ÄúUpdates were rejected / non-fast-forward‚Äù:

```bash
git pull origin "$BRANCH" -X ours
git push
```

‚Äúrefusing to merge unrelated histories‚Äù: covered by `--allow-unrelated-histories`.

Accidentally committed build/large files:

```bash
# add them to .gitignore first, then:
git rm -r --cached .
git add -A
git commit -m "Apply .gitignore (remove tracked build artifacts)"
git push
```

Large push errors (no LFS) ‚Äî temporary buffer increase:

```bash
git config --global http.postBuffer 524288000
```